@model CMS.BL.Entity.tbl_Orders

@if (Model == null)
{
    <div class="sectionHeader">Viewing @ViewBag.OrderType</div>
    <div class="sectionWindow">
        <div class="btnToggleSection">@ViewBag.OrderType Details +</div>
        <div class="sectionContent">
            <div><span>No such @ViewBag.OrderType</span></div>
        </div>
    </div>
}
else
{
    <div class="sectionHeader">Viewing @ViewBag.OrderType for @Model.BillingFirstnames @Model.BillingSurname,
        @ViewBag.OrderType No.@Model.OrderID</div>
    <div class="sectionWindow"><div class="btnToggleSection">@ViewBag.OrderType Status +</div>
        <div class="sectionContent"><div class="sectionColumn orderStatus">
            <table class="hTable">
                <thead>
                    <tr>
                        <td>Date</td>
                        <td>Status</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var statHistory in Model.tbl_CustOrdStatus.OrderByDescending(cs => cs.CS_TimeStamp))
                    {
                        <tr>
                            <td>@statHistory.CS_TimeStamp.ToString()</td>
                            <td>@statHistory.tbl_OrderStatus.OS_Status</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
            @if (!(bool)ViewBag.IsPopup && Model.CurrentOrderStatus != CMS.BL.OrderStatus.Canceled)
            {
                <div class="sectionColumn">
                @{
                    var status = Model.tbl_CustOrdStatus.Where(m=>m.CS_OrderID == Model.OrderID).OrderByDescending(m=>m.CS_TimeStamp).FirstOrDefault();
                    int statusID = 0;
                    if (status != null)
                    {
                        statusID = status.CS_StatusID;
                    }
                if (statusID != (int)CMS.BL.OrderStatus.Processing)
                {
                    <button type="button" id="btnProcessing" class="btnGreyGreen" data-status="@((int)CMS.BL.OrderStatus.Processing)" data-bind="click: onChangeStatus">
                        Processing</button>
                }
                if (statusID != (int)CMS.BL.OrderStatus.Despatched)
                {
                    <button type="button" id="btnDespatched" class="btnGreyGreen" data-status="@((int)CMS.BL.OrderStatus.Despatched)" data-bind="click: onChangeStatus">
                        Despatched</button>
                }
                if (statusID != (int)CMS.BL.OrderStatus.Refunded)
                {
                    <button type="button" id="btnRefunded" class="btnGreyGreen" data-status="@((int)CMS.BL.OrderStatus.Refunded)" data-bind="click: onChangeStatus">
                        Refunded</button>
                }
                <button type="button" id="btnPackingList" class="btnGreyGreen" data-bind="click: onPackingList">
                      Packing List</button>
                if (statusID != (int)CMS.BL.OrderStatus.Paid)
                {
                    <button type="button" id="btnPaid" class="btnGreyGreen" data-status="@((int)CMS.BL.OrderStatus.Paid)" data-bind="click: onChangeStatus">
                        Paid</button>
                }
                }
                </div>
            }
        </div>
    </div>
    <div class="sectionWindow"><div class="btnToggleSection">Billing Address / @ViewBag.OrderType Instructions +</div>
        <div class="sectionContent">
            <div class="sectionColumn">
                <h2>Billing Address</h2>
                <div class="tableContainer">
                    <table class="vTable">
                        <tbody>
                            <tr>
                                <td>Name</td>
                                <td>@Model.BillingFirstnames @Model.BillingSurname</td>
                            </tr>
                            <tr>
                                <td>Address</td>
                                <td>
                                    @(String.IsNullOrEmpty(Model.BillingAddress1) ? String.Empty : Model.BillingAddress1)
                                    @Html.Raw(String.IsNullOrEmpty(Model.BillingAddress2) ? String.Empty : " <br /> " + Model.BillingAddress2)
                                </td>
                            </tr>
                            <tr>
                                <td>Town / City</td>
                                <td>@Model.BillingCity</td>
                            </tr>
                            <tr>
                                <td>County / State</td>
                                <td>@Model.BillingState</td>
                            </tr>
                            <tr>
                                <td>Postcode</td>
                                <td>@Model.BillingPostCode</td>
                            </tr>
                            <tr>
                                <td>Country</td>
                                <td>@Model.BillingCountry</td>
                            </tr>
                            <tr>
                                <td>Telephone</td>
                                <td>@Model.BillingPhone</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            @if (!(bool)ViewBag.IsDonation)
            {
            <div class="sectionColumn">
                <h2>Order Instructions</h2>
                <div class="tableContainer">
                    <table class="vTable">
                        <tbody>
                            <tr>
                                <td>Delivery Instructions</td>
                                <td>@Model.O_DeliveryNotes</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            }
        </div>
    </div>
    if (!(bool)ViewBag.IsDonation)
    {
    <div class="sectionWindow"><div class="btnToggleSection">Delivery Address / Tracking
        Information +</div>
        <div class="sectionContent"><div class="sectionColumn">
            <h2>Delivery Address</h2>
            <div class="tableContainer">
                <table class="vTable">
                    <tbody>
                        <tr>
                            <td>Name</td>
                            <td>@Model.DeliveryFirstnames @Model.DeliverySurname</td>
                        </tr>
                        <tr>
                            <td>Address</td>
                            <td>
                                @(String.IsNullOrEmpty(Model.DeliveryAddress1) ? String.Empty : Model.DeliveryAddress1)
                                @Html.Raw(String.IsNullOrEmpty(Model.DeliveryAddress2) ? String.Empty : " <br /> " + Model.DeliveryAddress2)
                            </td>
                        </tr>
                        <tr>
                            <td>Town / City</td>
                            <td>@Model.DeliveryCity</td>
                        </tr>
                        <tr>
                            <td>County / State</td>
                            <td>@Model.DeliveryState</td>
                        </tr>
                        <tr>
                            <td>Postcode</td>
                            <td>@Model.DeliveryPostCode</td>
                        </tr>
                        <tr>
                            <td>Country</td>
                            <td>@Model.DeliveryCountry</td>
                        </tr>
                        <tr>
                            <td>Telephone</td>
                            <td>@Model.DeliveryPhone</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
            @if (!(bool)ViewBag.IsPopup)
            {
                <div class="sectionColumn">
                    <h2>Tracking Information</h2>
                    <div data-bind="visible: !isNewMethod()">
                        <label for="sDespatchMethod">Despatch Method</label>
                        <select id="sDespatchMethod" name="DisplatchMethod">
                            <option value="0">...</option>
                            @foreach (var option in ViewBag.Methodes as SelectList)
                            {
                                <option value="@option.Value" @(option.Value.Equals(Model.O_DespatchMethodID.ToString()) ? "selected=selected" : string.Empty)>@option.Text</option>
                            }
                        </select>
                        <a href="#" title="Add New Method" data-bind="click: onNewMethod">+</a> </div>
                    <div data-bind="visible: isNewMethod">
                        <label for="tbNewMethod">New Despatch Method</label>
                        <input id="tbNewMethod" type="text" />
                    </div>
                    <div class="btnContainer" data-bind="visible: isNewMethod">
                        <button class="btnGreyGreen" data-bind="click: onSaveNewMethod">
                            Save</button>
                        <button class="btnGreyRed" data-bind="click: onCancelNewMethod">
                            Cancel</button>
                    </div>
                    <div>
                        <label for="tbDeliveryDate">Delivery Date</label>
                        <input id="tbDeliveryDate" name="DeliveryDate" type="text" data-input-type="dateTime" value="@Model.O_DeliveryDate"/>
                    </div>
                    <div>
                        <label for="tbTrackingURL">Tracking URL</label>
                        <input id="tbTrackingURL" name="TrackingURL" type="text" value="@Model.O_TrackingURL"/>
                    </div>
                    <div>
                        <label for="tbTrackingRef">Tracking Ref</label>
                        <input id="tbTrackingRef" name="Tracking Ref" type="text" value="@Model.O_TrackingRef" />
                    </div>
                    <div class="btnContainer" data-bind="visible: !isNewMethod()">
                        <button class="btnGreyGreen" data-bind="click: onUpdateTracking">
                            Update</button>
                    </div>
                </div>
            }
        </div>
    </div>
    }
    <div class="sectionWindow"><div class="btnToggleSection">Transaction Information +</div>
        <div class="sectionContent"><div class="sectionColumn"><div class="tableContainer">
            <table class="vTable">
                <tbody>
                    <tr>
                        <td>@ViewBag.OrderType ID</td>
                        <td>@Model.OrderID</td>
                    </tr>
                    <tr>
                        <td>@ViewBag.OrderType Date</td>
                        <td>@Model.O_Timestamp.ToString()</td>
                    </tr>
                    <tr>
                        <td>Customer email</td>
                        <td>@Model.CustomerEMail</td>
                    </tr>
                    <tr>
                        <td>Is customer registered</td>
                        <td>@(Model.tbl_Customer != null && Model.tbl_Customer.CU_Registered ? "Yes" : "No")</td>
                    </tr>
                    <tr>
                        <td>Cash Sale</td>
                        <td>@(Model.O_IsCashSale ? "Yes" : "No")</td>
                    </tr>
                    @if (Model.O_IsCashSale)
                    {
                    <tr>
                        <td>Payment</td>
                        <td>@Enum.GetName(typeof(CMS.BL.CashPayment), Model.O_CashPayment.GetValueOrDefault(1))</td>
                    </tr>
                    <tr>
                        <td>@ViewBag.OrderType creator</td>
                        <td>@(Model.tbl_AdminUsers != null ? String.Format("{0} ({1})", Model.tbl_AdminUsers.US_UserName, Model.tbl_AdminUsers.US_Email) : String.Empty)</td>
                    </tr>
                    }
                    <tr>
                        <td>Amount</td>
                        <td>@Model.GetPriceString()</td>
                    </tr>
                    <tr>
                        <td>@ViewBag.OrderType status</td>
                        <td>@Model.CurrentOrderStatus.ToString()</td>
                    </tr>
                </tbody>
            </table>
        </div>
        </div>
        </div>
    </div>
    if (!(bool)ViewBag.IsDonation)
    {
    <div class="sectionWindow"><div class="btnToggleSection">Order Details +</div>
        <div class="sectionContent">
        <div class="tableContainer">
            <table class="hTable">
                <thead>
                    <tr>
                        <td>Product</td>
                        <td>Quantity</td>
                        <td>Price (@CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol)</td>
                        <td>Sub Total (@CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol)</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var oContent in Model.tbl_OrderContent)
                    {
                        <tr>
                            <td>
                                @oContent.OC_Title
                                <br /> 
                                @oContent.OC_ProductAttributes
                            </td>
                            <td>@oContent.OC_Quantity</td>
                            <td>@oContent.GetItemPriceString()</td>
                            <td>@oContent.GetPriceString()</td>
                        </tr>   
                    }
                    <tr>
                        <td colspan="3">Delivery</td>
                        <td>@Model.GetDeliveryAmountString()</td>
                    </tr>
                    <tr>
                        <td colspan="3">Discount</td>
                        <td>@Model.GetDiscountAmountString()</td>
                    </tr>
                    <tr>
                        <td colspan="3">TOTAL</td>
                        <td>@Model.GetPriceString()</td>
                    </tr>
                </tbody>
            </table>
        </div>
        </div>
    </div>
    }
}